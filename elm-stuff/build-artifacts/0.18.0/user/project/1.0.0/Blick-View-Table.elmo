var _user$project$Blick_View_Table$dummyRow = A2(
	_elm_lang$html$Html$tr,
	{ctor: '[]'},
	{
		ctor: '::',
		_0: A2(
			_elm_lang$html$Html$td,
			{ctor: '[]'},
			{
				ctor: '::',
				_0: _elm_lang$html$Html$text('ã€€'),
				_1: {ctor: '[]'}
			}),
		_1: {ctor: '[]'}
	});
var _user$project$Blick_View_Table$fillByDummyRow = function (rows) {
	var numOfRows = _elm_lang$core$List$length(rows);
	return (_elm_lang$core$Native_Utils.cmp(_user$project$Blick_Constant$rowPerTable, numOfRows) > 0) ? A2(
		_elm_lang$core$Basics_ops['++'],
		rows,
		A2(_elm_lang$core$List$repeat, _user$project$Blick_Constant$rowPerTable - numOfRows, _user$project$Blick_View_Table$dummyRow)) : rows;
};
var _user$project$Blick_View_Table$rowOfTable = function (_p0) {
	var _p1 = _p0;
	var _p3 = _p1._0;
	var _p2 = _p1._0._0;
	return A2(
		_elm_lang$html$Html$tr,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$id(_p2),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$td,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('is-paddingless'),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$a,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('text-nowrap'),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$href(
									A2(_elm_lang$core$Basics_ops['++'], '/', _p2)),
								_1: {
									ctor: '::',
									_0: _user$project$Blick_View_Parts$onClickNoPropagate(
										_user$project$Blick_Type$GoTo(
											_user$project$Blick_Type$Detail(_p3))),
									_1: {ctor: '[]'}
								}
							}
						},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text(_p1._1.title),
							_1: {
								ctor: '::',
								_0: A3(
									_user$project$Blick_View_Parts$authorTag,
									_user$project$Blick_Type$Selector(
										A2(
											_elm_lang$core$Basics_ops['++'],
											'tr[id=\'',
											A2(_elm_lang$core$Basics_ops['++'], _p2, '\']'))),
									_p3,
									_p1._1.author_email),
								_1: {ctor: '[]'}
							}
						}),
					_1: {ctor: '[]'}
				}),
			_1: {ctor: '[]'}
		});
};
var _user$project$Blick_View_Table$tableColumn = function (materials) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('column is-half'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$table,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('table is-striped is-hoverable is-fullwidth'),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$tbody,
						{ctor: '[]'},
						_user$project$Blick_View_Table$fillByDummyRow(
							A2(
								_elm_lang$core$List$map,
								_elm_lang$html$Html_Lazy$lazy(_user$project$Blick_View_Table$rowOfTable),
								materials))),
					_1: {ctor: '[]'}
				}),
			_1: {ctor: '[]'}
		});
};
var _user$project$Blick_View_Table$fillByDummyTable = F2(
	function (tpp, tables) {
		var _p4 = tables;
		if (_p4.ctor === '[]') {
			return A2(
				_elm_lang$core$List$repeat,
				tpp,
				A2(
					_elm_lang$html$Html_Lazy$lazy,
					_user$project$Blick_View_Table$tableColumn,
					{ctor: '[]'}));
		} else {
			if (_p4._1.ctor === '[]') {
				return _elm_lang$core$Native_Utils.eq(tpp, 1) ? tables : A2(
					_elm_lang$core$Basics_ops['++'],
					tables,
					{
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html_Lazy$lazy,
							_user$project$Blick_View_Table$tableColumn,
							{ctor: '[]'}),
						_1: {ctor: '[]'}
					});
			} else {
				return tables;
			}
		}
	});
var _user$project$Blick_View_Table$tablesOfPage = F4(
	function (tpp, tablePage, pageIndex, materials) {
		return _elm_lang$core$Native_Utils.eq(pageIndex, tablePage) ? A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('tables-item'),
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('columns'),
						_1: {ctor: '[]'}
					},
					A2(
						_user$project$Blick_View_Table$fillByDummyTable,
						tpp,
						A2(_elm_lang$core$List$map, _user$project$Blick_View_Table$tableColumn, materials))),
				_1: {ctor: '[]'}
			}) : A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('tables-item'),
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$style(
						{
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'display', _1: 'none'},
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}
			},
			{ctor: '[]'});
	});
var _user$project$Blick_View_Table$fillByDummyPage = F2(
	function (tpp, pages) {
		var _p5 = pages;
		if (_p5.ctor === '[]') {
			return {
				ctor: '::',
				_0: A4(
					_user$project$Blick_View_Table$tablesOfPage,
					tpp,
					0,
					0,
					{ctor: '[]'}),
				_1: {ctor: '[]'}
			};
		} else {
			return pages;
		}
	});
var _user$project$Blick_View_Table$tableNav = F2(
	function (max, tablePage) {
		return A2(
			_elm_lang$html$Html$nav,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('tables-navigation pagination is-centered'),
				_1: {
					ctor: '::',
					_0: A2(_elm_lang$html$Html_Attributes$attribute, 'role', 'navigation'),
					_1: {
						ctor: '::',
						_0: A2(_elm_lang$html$Html_Attributes$attribute, 'aria-label', 'pagination'),
						_1: {ctor: '[]'}
					}
				}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$button,
					A3(
						_user$project$Blick_View_Parts$withDisabled,
						_elm_lang$core$Native_Utils.cmp(tablePage, 0) < 1,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Events$onClick(
								_user$project$Blick_Type$SetTablePage(tablePage - 1)),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('pagination-previous'),
							_1: {ctor: '[]'}
						}),
					{
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$i,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$class('fa fa-chevron-left'),
								_1: {ctor: '[]'}
							},
							{ctor: '[]'}),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$button,
						A3(
							_user$project$Blick_View_Parts$withDisabled,
							_elm_lang$core$Native_Utils.cmp(tablePage, max - 1) > -1,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Events$onClick(
									_user$project$Blick_Type$SetTablePage(tablePage + 1)),
								_1: {ctor: '[]'}
							},
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$class('pagination-next'),
								_1: {ctor: '[]'}
							}),
						{
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$i,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$class('fa fa-chevron-right'),
									_1: {ctor: '[]'}
								},
								{ctor: '[]'}),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}
			});
	});
var _user$project$Blick_View_Table$view = function (_p6) {
	var _p7 = _p6;
	var _p10 = _p7.windowSize;
	var _p9 = _p7.tablePage;
	var _p8 = _p7.materials;
	var tpp = _user$project$Blick_Constant$tablePerPage(_p10.width);
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('hero is-primary'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('hero-body'),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('container tables is-fullhd'),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: A2(
								_user$project$Blick_View_Table$tableNav,
								A2(
									_user$project$Blick_Constant$maxTablePage,
									_p10.width,
									_user$project$Blick_Type$dictSize(_p8)),
								_p9),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$div,
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$class('tables-container'),
										_1: {ctor: '[]'}
									},
									A2(
										_user$project$Blick_View_Table$fillByDummyPage,
										tpp,
										A2(
											_elm_lang$core$List$indexedMap,
											A2(_user$project$Blick_View_Table$tablesOfPage, tpp, _p9),
											A2(
												_user$project$Util$split,
												tpp,
												A2(
													_user$project$Util$split,
													_user$project$Blick_Constant$rowPerTable,
													_user$project$Blick_Type$matDictToList(_p8)))))),
								_1: {ctor: '[]'}
							}
						}),
					_1: {ctor: '[]'}
				}),
			_1: {ctor: '[]'}
		});
};
