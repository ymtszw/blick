var _ymtszw$blick$Blick_Type$headersToString = function (headers) {
	return A2(
		_elm_lang$core$String$join,
		'\n',
		A2(
			_elm_lang$core$List$map,
			function (_p0) {
				var _p1 = _p0;
				return A2(
					_elm_lang$core$Basics_ops['++'],
					_p1._0,
					A2(_elm_lang$core$Basics_ops['++'], ' : ', _p1._1));
			},
			_elm_lang$core$Dict$toList(headers)));
};
var _ymtszw$blick$Blick_Type$responseToList = F3(
	function (url, headers, body) {
		return {
			ctor: '::',
			_0: A2(_elm_lang$core$Basics_ops['++'], 'URL: ', url),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$core$Basics_ops['++'],
					'Headers: \n',
					_ymtszw$blick$Blick_Type$headersToString(headers)),
				_1: {
					ctor: '::',
					_0: A2(_elm_lang$core$Basics_ops['++'], 'Body: ', body),
					_1: {ctor: '[]'}
				}
			}
		};
	});
var _ymtszw$blick$Blick_Type$statusToString = function (_p2) {
	var _p3 = _p2;
	return A2(
		_elm_lang$core$Basics_ops['++'],
		_elm_lang$core$Basics$toString(_p3.code),
		A2(_elm_lang$core$Basics_ops['++'], ' ', _p3.message));
};
var _ymtszw$blick$Blick_Type$matDictGet = F2(
	function (_p5, _p4) {
		var _p6 = _p5;
		var _p7 = _p4;
		return A2(_elm_lang$core$Dict$get, _p6._0, _p7._0);
	});
var _ymtszw$blick$Blick_Type$dictSize = function (_p8) {
	var _p9 = _p8;
	return _elm_lang$core$Dict$size(_p9._0);
};
var _ymtszw$blick$Blick_Type$inputId = F2(
	function (_p11, _p10) {
		var _p12 = _p11;
		var _p13 = _p10;
		return A2(
			_elm_lang$core$Basics_ops['++'],
			_p12._0,
			A2(_elm_lang$core$Basics_ops['++'], '-', _p13.name_));
	});
var _ymtszw$blick$Blick_Type$Field = F2(
	function (a, b) {
		return {name_: a, value_: b};
	});
var _ymtszw$blick$Blick_Type$Editable = F2(
	function (a, b) {
		return {prev: a, edit: b};
	});
var _ymtszw$blick$Blick_Type$DOMRect = F4(
	function (a, b, c, d) {
		return {left: a, top: b, width: c, height: d};
	});
var _ymtszw$blick$Blick_Type$Model = function (a) {
	return function (b) {
		return function (c) {
			return function (d) {
				return function (e) {
					return function (f) {
						return function (g) {
							return function (h) {
								return function (i) {
									return function (j) {
										return function (k) {
											return function (l) {
												return {materials: a, editing: b, selectedSuggestion: c, matches: d, filter: e, members: f, carouselPage: g, tablePage: h, route: i, exceptions: j, windowSize: k, deb: l};
											};
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var _ymtszw$blick$Blick_Type$FilterState = F2(
	function (a, b) {
		return {focused: a, value_: b};
	});
var _ymtszw$blick$Blick_Type$EditState = F3(
	function (a, b, c) {
		return {matId: a, field: b, domRect: c};
	});
var _ymtszw$blick$Blick_Type$Material = F9(
	function (a, b, c, d, e, f, g, h, i) {
		return {title: a, url: b, thumbnail_url: c, created_time: d, author_email: e, type_: f, $public: g, excluded: h, exclude_reason: i};
	});
var _ymtszw$blick$Blick_Type$Exception = F4(
	function (a, b, c, d) {
		return {message: a, description: b, details: c, isOpen: d};
	});
var _ymtszw$blick$Blick_Type$fromHttpError = function (err) {
	var _p14 = err;
	switch (_p14.ctor) {
		case 'BadUrl':
			return A4(
				_ymtszw$blick$Blick_Type$Exception,
				'Malformed URL',
				_p14._0,
				{ctor: '[]'},
				true);
		case 'Timeout':
			return A4(
				_ymtszw$blick$Blick_Type$Exception,
				'Server Timeout',
				'Check network connection',
				{ctor: '[]'},
				true);
		case 'NetworkError':
			return A4(
				_ymtszw$blick$Blick_Type$Exception,
				'Network Error',
				'Check network connection',
				{ctor: '[]'},
				true);
		case 'BadStatus':
			var _p15 = _p14._0.body;
			return A4(
				_ymtszw$blick$Blick_Type$Exception,
				_ymtszw$blick$Blick_Type$statusToString(_p14._0.status),
				_p15,
				A3(_ymtszw$blick$Blick_Type$responseToList, _p14._0.url, _p14._0.headers, _p15),
				true);
		default:
			return A4(
				_ymtszw$blick$Blick_Type$Exception,
				_ymtszw$blick$Blick_Type$statusToString(_p14._1.status),
				_p14._0,
				A3(_ymtszw$blick$Blick_Type$responseToList, _p14._1.url, _p14._1.headers, _p14._1.body),
				true);
	}
};
var _ymtszw$blick$Blick_Type$CancelEdit = {ctor: 'CancelEdit'};
var _ymtszw$blick$Blick_Type$SubmitEdit = F2(
	function (a, b) {
		return {ctor: 'SubmitEdit', _0: a, _1: b};
	});
var _ymtszw$blick$Blick_Type$SelectSuggestion = function (a) {
	return {ctor: 'SelectSuggestion', _0: a};
};
var _ymtszw$blick$Blick_Type$CompleteEdit = F2(
	function (a, b) {
		return {ctor: 'CompleteEdit', _0: a, _1: b};
	});
var _ymtszw$blick$Blick_Type$InputEdit = F2(
	function (a, b) {
		return {ctor: 'InputEdit', _0: a, _1: b};
	});
var _ymtszw$blick$Blick_Type$StartEdit = F3(
	function (a, b, c) {
		return {ctor: 'StartEdit', _0: a, _1: b, _2: c};
	});
var _ymtszw$blick$Blick_Type$InitiateEdit = F3(
	function (a, b, c) {
		return {ctor: 'InitiateEdit', _0: a, _1: b, _2: c};
	});
var _ymtszw$blick$Blick_Type$DebDrop = {ctor: 'DebDrop'};
var _ymtszw$blick$Blick_Type$DebTick = F2(
	function (a, b) {
		return {ctor: 'DebTick', _0: a, _1: b};
	});
var _ymtszw$blick$Blick_Type$DebLift = F2(
	function (a, b) {
		return {ctor: 'DebLift', _0: a, _1: b};
	});
var _ymtszw$blick$Blick_Type$FocusFilter = function (a) {
	return {ctor: 'FocusFilter', _0: a};
};
var _ymtszw$blick$Blick_Type$SetFilterFocus = function (a) {
	return {ctor: 'SetFilterFocus', _0: a};
};
var _ymtszw$blick$Blick_Type$InputFilter = function (a) {
	return {ctor: 'InputFilter', _0: a};
};
var _ymtszw$blick$Blick_Type$SetTablePage = function (a) {
	return {ctor: 'SetTablePage', _0: a};
};
var _ymtszw$blick$Blick_Type$SetCarouselPage = function (a) {
	return {ctor: 'SetCarouselPage', _0: a};
};
var _ymtszw$blick$Blick_Type$ClientRes = function (a) {
	return {ctor: 'ClientRes', _0: a};
};
var _ymtszw$blick$Blick_Type$PurgeErr = function (a) {
	return {ctor: 'PurgeErr', _0: a};
};
var _ymtszw$blick$Blick_Type$CloseErr = function (a) {
	return {ctor: 'CloseErr', _0: a};
};
var _ymtszw$blick$Blick_Type$TimedErr = F2(
	function (a, b) {
		return {ctor: 'TimedErr', _0: a, _1: b};
	});
var _ymtszw$blick$Blick_Type$WindowSize = function (a) {
	return {ctor: 'WindowSize', _0: a};
};
var _ymtszw$blick$Blick_Type$NoOp = {ctor: 'NoOp'};
var _ymtszw$blick$Blick_Type$GoTo = function (a) {
	return {ctor: 'GoTo', _0: a};
};
var _ymtszw$blick$Blick_Type$Loc = function (a) {
	return {ctor: 'Loc', _0: a};
};
var _ymtszw$blick$Blick_Type$ListMembers = function (a) {
	return {ctor: 'ListMembers', _0: a};
};
var _ymtszw$blick$Blick_Type$UpdateMaterialField = function (a) {
	return {ctor: 'UpdateMaterialField', _0: a};
};
var _ymtszw$blick$Blick_Type$GetMaterial = function (a) {
	return {ctor: 'GetMaterial', _0: a};
};
var _ymtszw$blick$Blick_Type$ListMaterials = function (a) {
	return {ctor: 'ListMaterials', _0: a};
};
var _ymtszw$blick$Blick_Type$AutoCompleted = function (a) {
	return {ctor: 'AutoCompleted', _0: a};
};
var _ymtszw$blick$Blick_Type$ManualInput = function (a) {
	return {ctor: 'ManualInput', _0: a};
};
var _ymtszw$blick$Blick_Type$UnTouched = {ctor: 'UnTouched'};
var _ymtszw$blick$Blick_Type$Selector = function (a) {
	return {ctor: 'Selector', _0: a};
};
var _ymtszw$blick$Blick_Type$descendantOf = F2(
	function (_p17, _p16) {
		var _p18 = _p17;
		var _p19 = _p16;
		return _ymtszw$blick$Blick_Type$Selector(
			A2(
				_elm_lang$core$Basics_ops['++'],
				_p18._0,
				A2(_elm_lang$core$Basics_ops['++'], ' ', _p19._0)));
	});
var _ymtszw$blick$Blick_Type$Excited = F2(
	function (a, b) {
		return {ctor: 'Excited', _0: a, _1: b};
	});
var _ymtszw$blick$Blick_Type$Grounded = {ctor: 'Grounded'};
var _ymtszw$blick$Blick_Type$NotFound = {ctor: 'NotFound'};
var _ymtszw$blick$Blick_Type$Detail = function (a) {
	return {ctor: 'Detail', _0: a};
};
var _ymtszw$blick$Blick_Type$Root = {ctor: 'Root'};
var _ymtszw$blick$Blick_Type$TaggedStringKeyDict = function (a) {
	return {ctor: 'TaggedStringKeyDict', _0: a};
};
var _ymtszw$blick$Blick_Type$matDictEmpty = _ymtszw$blick$Blick_Type$TaggedStringKeyDict(_elm_lang$core$Dict$empty);
var _ymtszw$blick$Blick_Type$matDictInsert = F3(
	function (_p21, material, _p20) {
		var _p22 = _p21;
		var _p23 = _p20;
		return _ymtszw$blick$Blick_Type$TaggedStringKeyDict(
			A3(_elm_lang$core$Dict$insert, _p22._0, material, _p23._0));
	});
var _ymtszw$blick$Blick_Type$matDictUnion = F2(
	function (_p25, _p24) {
		var _p26 = _p25;
		var _p27 = _p24;
		return _ymtszw$blick$Blick_Type$TaggedStringKeyDict(
			A2(_elm_lang$core$Dict$union, _p26._0, _p27._0));
	});
var _ymtszw$blick$Blick_Type$MatId = function (a) {
	return {ctor: 'MatId', _0: a};
};
var _ymtszw$blick$Blick_Type$matDictFilter = F2(
	function (filter, _p28) {
		var _p29 = _p28;
		return _ymtszw$blick$Blick_Type$TaggedStringKeyDict(
			A2(
				_elm_lang$core$Dict$filter,
				F2(
					function (strKey, material) {
						return A2(
							filter,
							_ymtszw$blick$Blick_Type$MatId(strKey),
							material);
					}),
				_p29._0));
	});
var _ymtszw$blick$Blick_Type$matDictSplit = F2(
	function (splitter, _p30) {
		var _p31 = _p30;
		var _p32 = A2(
			_elm_lang$core$Dict$partition,
			F2(
				function (strKey, material) {
					return A2(
						splitter,
						_ymtszw$blick$Blick_Type$MatId(strKey),
						material);
				}),
			_p31._0);
		var trues = _p32._0;
		var falses = _p32._1;
		return {
			ctor: '_Tuple2',
			_0: _ymtszw$blick$Blick_Type$TaggedStringKeyDict(trues),
			_1: _ymtszw$blick$Blick_Type$TaggedStringKeyDict(falses)
		};
	});
var _ymtszw$blick$Blick_Type$matDictToList = function (_p33) {
	var _p34 = _p33;
	return A3(
		_elm_lang$core$Dict$foldr,
		F3(
			function (idStr, mat, acc) {
				return {
					ctor: '::',
					_0: {
						ctor: '_Tuple2',
						_0: _ymtszw$blick$Blick_Type$MatId(idStr),
						_1: mat
					},
					_1: acc
				};
			}),
		{ctor: '[]'},
		_p34._0);
};
var _ymtszw$blick$Blick_Type$matIdDecoder = A2(_elm_lang$core$Json_Decode$map, _ymtszw$blick$Blick_Type$MatId, _elm_lang$core$Json_Decode$string);
var _ymtszw$blick$Blick_Type$Url = function (a) {
	return {ctor: 'Url', _0: a};
};
var _ymtszw$blick$Blick_Type$urlDecoder = A2(_elm_lang$core$Json_Decode$map, _ymtszw$blick$Blick_Type$Url, _elm_lang$core$Json_Decode$string);
var _ymtszw$blick$Blick_Type$Email = function (a) {
	return {ctor: 'Email', _0: a};
};
var _ymtszw$blick$Blick_Type$emailDecoder = A2(_elm_lang$core$Json_Decode$map, _ymtszw$blick$Blick_Type$Email, _elm_lang$core$Json_Decode$string);
var _ymtszw$blick$Blick_Type$Html_ = {ctor: 'Html_'};
var _ymtszw$blick$Blick_Type$Qiita = {ctor: 'Qiita'};
var _ymtszw$blick$Blick_Type$GoogleFolder = {ctor: 'GoogleFolder'};
var _ymtszw$blick$Blick_Type$GoogleFile = {ctor: 'GoogleFile'};
var _ymtszw$blick$Blick_Type$GoogleDoc = {ctor: 'GoogleDoc'};
var _ymtszw$blick$Blick_Type$GoogleSlide = {ctor: 'GoogleSlide'};
var _ymtszw$blick$Blick_Type$typeFromString = function (str) {
	var _p35 = str;
	switch (_p35) {
		case 'google_slide':
			return _ymtszw$blick$Blick_Type$GoogleSlide;
		case 'google_doc':
			return _ymtszw$blick$Blick_Type$GoogleDoc;
		case 'google_file':
			return _ymtszw$blick$Blick_Type$GoogleFile;
		case 'google_folder':
			return _ymtszw$blick$Blick_Type$GoogleFolder;
		case 'qiita':
			return _ymtszw$blick$Blick_Type$Qiita;
		default:
			return _ymtszw$blick$Blick_Type$Html_;
	}
};
var _ymtszw$blick$Blick_Type$typeDecoder = A2(_elm_lang$core$Json_Decode$map, _ymtszw$blick$Blick_Type$typeFromString, _elm_lang$core$Json_Decode$string);
var _ymtszw$blick$Blick_Type$materialDecoder = A2(
	_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
	A2(
		_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
		A2(
			_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
			A2(
				_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
				A2(
					_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
					A2(
						_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
						A2(
							_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
							A2(
								_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
								A2(
									_elm_community$json_extra$Json_Decode_Extra_ops['|:'],
									_elm_lang$core$Json_Decode$succeed(_ymtszw$blick$Blick_Type$Material),
									A2(_elm_lang$core$Json_Decode$field, 'title', _elm_lang$core$Json_Decode$string)),
								A2(_elm_lang$core$Json_Decode$field, 'url', _ymtszw$blick$Blick_Type$urlDecoder)),
							A2(
								_elm_lang$core$Json_Decode$field,
								'thumbnail_url',
								_elm_lang$core$Json_Decode$maybe(_ymtszw$blick$Blick_Type$urlDecoder))),
						A2(
							_elm_lang$core$Json_Decode$field,
							'created_time',
							_elm_lang$core$Json_Decode$maybe(_elm_community$json_extra$Json_Decode_Extra$date))),
					A2(
						_elm_lang$core$Json_Decode$field,
						'author_email',
						_elm_lang$core$Json_Decode$maybe(_ymtszw$blick$Blick_Type$emailDecoder))),
				A2(_elm_lang$core$Json_Decode$field, 'type', _ymtszw$blick$Blick_Type$typeDecoder)),
			A2(_elm_lang$core$Json_Decode$field, 'public', _elm_lang$core$Json_Decode$bool)),
		A2(_elm_lang$core$Json_Decode$field, 'excluded', _elm_lang$core$Json_Decode$bool)),
	A2(
		_elm_lang$core$Json_Decode$field,
		'exclude_reason',
		_elm_lang$core$Json_Decode$maybe(_elm_lang$core$Json_Decode$string)));
var _ymtszw$blick$Blick_Type$matDictDecoder = A2(
	_elm_lang$core$Json_Decode$map,
	_ymtszw$blick$Blick_Type$TaggedStringKeyDict,
	_elm_lang$core$Json_Decode$dict(
		A2(_elm_lang$core$Json_Decode$field, 'data', _ymtszw$blick$Blick_Type$materialDecoder)));
