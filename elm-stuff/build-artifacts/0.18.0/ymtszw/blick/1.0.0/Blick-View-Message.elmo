var _ymtszw$blick$Blick_View_Message$detailList = function (details) {
	var _p0 = details;
	if (_p0.ctor === '[]') {
		return _elm_lang$html$Html$text('');
	} else {
		return A2(
			_elm_lang$html$Html$ul,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('is-size-7 details'),
				_1: {ctor: '[]'}
			},
			A2(
				_elm_lang$core$List$map,
				function (str) {
					return A2(
						_elm_lang$html$Html$li,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('pre'),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text(str),
							_1: {ctor: '[]'}
						});
				},
				details));
	}
};
var _ymtszw$blick$Blick_View_Message$isOpenClass = function (isOpen) {
	return isOpen ? '' : ' is-closed';
};
var _ymtszw$blick$Blick_View_Message$notification = function (_p1) {
	var _p2 = _p1;
	var _p3 = _p2._0;
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class(
				A2(
					_elm_lang$core$Basics_ops['++'],
					'message is-danger',
					_ymtszw$blick$Blick_View_Message$isOpenClass(_p2._1.isOpen))),
			_1: {
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$id(
					A2(
						_elm_lang$core$Basics_ops['++'],
						'exception-',
						_elm_lang$core$Basics$toString(_p3))),
				_1: {ctor: '[]'}
			}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('message-header'),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$p,
						{ctor: '[]'},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text(_p2._1.message),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$small,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$class('is-size-7'),
								_1: {ctor: '[]'}
							},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text(
									_elm_lang$core$Basics$toString(
										_elm_lang$core$Date$fromTime(_p3))),
								_1: {ctor: '[]'}
							}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$button,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$class('delete'),
									_1: {
										ctor: '::',
										_0: _elm_lang$html$Html_Events$onClick(
											_ymtszw$blick$Blick_Type$CloseErr(_p3)),
										_1: {ctor: '[]'}
									}
								},
								{ctor: '[]'}),
							_1: {ctor: '[]'}
						}
					}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('message-body content is-small'),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$p,
							{ctor: '[]'},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text(_p2._1.description),
								_1: {ctor: '[]'}
							}),
						_1: {
							ctor: '::',
							_0: _ymtszw$blick$Blick_View_Message$detailList(_p2._1.details),
							_1: {ctor: '[]'}
						}
					}),
				_1: {ctor: '[]'}
			}
		});
};
var _ymtszw$blick$Blick_View_Message$closeTransitionStyleElement = A3(
	_elm_lang$html$Html$node,
	'style',
	{
		ctor: '::',
		_0: _elm_lang$html$Html_Attributes$type_('text/css'),
		_1: {ctor: '[]'}
	},
	{
		ctor: '::',
		_0: _elm_lang$html$Html$text(
			A2(
				_elm_lang$core$Basics_ops['++'],
				'.exceptions .message.is-closed{transition:all ease-out ',
				A2(
					_elm_lang$core$Basics_ops['++'],
					_elm_lang$core$Basics$toString(_ymtszw$blick$Blick_Constant$exceptionCloseDuration),
					A2(
						_elm_lang$core$Basics_ops['++'],
						'ms ',
						A2(
							_elm_lang$core$Basics_ops['++'],
							_elm_lang$core$Basics$toString(_ymtszw$blick$Blick_Constant$exceptionCloseDelay),
							'ms}'))))),
		_1: {ctor: '[]'}
	});
var _ymtszw$blick$Blick_View_Message$view = function (exceptions) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('exceptions'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('columns'),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: _ymtszw$blick$Blick_View_Message$closeTransitionStyleElement,
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$div,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$class('column is-offset-half is-half'),
								_1: {ctor: '[]'}
							},
							A2(
								_elm_lang$core$List$map,
								_ymtszw$blick$Blick_View_Message$notification,
								_elm_lang$core$Dict$toList(exceptions))),
						_1: {ctor: '[]'}
					}
				}),
			_1: {ctor: '[]'}
		});
};
